// <auto-generated />
using System;
using BcmmOja.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BcmmOja.Migrations
{
    [DbContext(typeof(bcmm_ojaContext))]
    partial class bcmm_ojaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BcmmOja.Models.Applicant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnName("address")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnName("birth_date");

                    b.Property<bool>("Citizenship")
                        .HasColumnName("citizenship");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<bool?>("Dependant")
                        .HasColumnName("dependant");

                    b.Property<string>("DependantAge")
                        .HasColumnName("dependant_age")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("Disability")
                        .HasColumnName("disability");

                    b.Property<string>("DisabilityNature")
                        .HasColumnName("disability_nature")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("DriversLicence")
                        .HasColumnName("drivers_licence");

                    b.Property<string>("DriversLicenceType")
                        .HasColumnName("drivers_licence_type")
                        .IsUnicode(false);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnName("first_name")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Gender")
                        .HasColumnName("gender")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("HeardAboutUs")
                        .HasColumnName("heard_about_us")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("IdNumber")
                        .IsRequired()
                        .HasColumnName("id_number")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Language")
                        .HasColumnName("language")
                        .IsUnicode(false);

                    b.Property<string>("Languages")
                        .HasColumnName("languages")
                        .IsUnicode(false);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnName("last_name")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("MarketingInfo")
                        .HasColumnName("marketing_info");

                    b.Property<string>("Nationality")
                        .HasColumnName("nationality")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("NatureOfEmployment")
                        .HasColumnName("nature_of_employment")
                        .IsUnicode(false);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnName("phone_number")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Race")
                        .HasColumnName("race")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Relationship")
                        .HasColumnName("relationship")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("SarsRegistered")
                        .HasColumnName("sars_registered");

                    b.Property<string>("SarsTaxNumber")
                        .HasColumnName("sars_tax-number")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Title")
                        .HasColumnName("title")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("WorkPermitNumber")
                        .HasColumnName("work_permit_number")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasName("UQ__applican__3213E83ED6610A03");

                    b.HasIndex("IdNumber")
                        .IsUnique()
                        .HasName("UQ__applican__D58CDE11582859F6");

                    b.HasIndex("PhoneNumber")
                        .IsUnique()
                        .HasName("UQ__applican__A1936A6B66B20B1F");

                    b.ToTable("applicant");
                });

            modelBuilder.Entity("BcmmOja.Models.ApplicantDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<byte[]>("Document")
                        .IsRequired()
                        .HasColumnName("document");

                    b.Property<string>("DocumentFormat")
                        .IsRequired()
                        .HasColumnName("document_format")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("DocumentName")
                        .IsRequired()
                        .HasColumnName("document_name")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("DocumentPath")
                        .IsRequired()
                        .HasColumnName("document_path")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("DocumentType")
                        .IsRequired()
                        .HasColumnName("document_type")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("FkApplicantId")
                        .HasColumnName("fk_applicant_id");

                    b.HasKey("Id");

                    b.HasIndex("FkApplicantId");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasName("UQ__applican__3213E83E2999B4E4");

                    b.ToTable("applicant_document");
                });

            modelBuilder.Entity("BcmmOja.Models.ApplicantVacancy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Active")
                        .HasColumnName("active")
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<string>("Author")
                        .HasColumnName("author")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ClosingDate")
                        .HasColumnName("closing_date");

                    b.Property<string>("Contact")
                        .HasColumnName("contact")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<short?>("Count")
                        .HasColumnName("count");

                    b.Property<short?>("Date")
                        .HasColumnName("date");

                    b.Property<short?>("Day")
                        .HasColumnName("day");

                    b.Property<string>("Directorate")
                        .HasColumnName("directorate")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("Download")
                        .HasColumnName("download")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<int>("FkApplicantId")
                        .HasColumnName("fk_applicant_id");

                    b.Property<string>("Grade")
                        .HasColumnName("grade")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("Kpas")
                        .HasColumnName("kpas")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<byte?>("Month")
                        .HasColumnName("month");

                    b.Property<string>("Package")
                        .HasColumnName("package")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("Reference")
                        .HasColumnName("reference")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("Requirements")
                        .HasColumnName("requirements")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("Title")
                        .HasColumnName("title")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<short?>("Year")
                        .HasColumnName("year");

                    b.HasKey("Id");

                    b.HasIndex("FkApplicantId");

                    b.ToTable("applicant_vacancy");
                });

            modelBuilder.Entity("BcmmOja.Models.ComputerLiteracy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Competency")
                        .IsRequired()
                        .HasColumnName("competency")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<int>("FkApplicantId")
                        .HasColumnName("fk_applicant_id");

                    b.Property<string>("Skill")
                        .IsRequired()
                        .HasColumnName("skill")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("FkApplicantId");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasName("UQ__computer__3213E83E4979668E");

                    b.ToTable("computer_literacy");
                });

            modelBuilder.Entity("BcmmOja.Models.CriminalRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<string>("DateFinalized")
                        .IsRequired()
                        .HasColumnName("date_finalized")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<int>("FkApplicantId")
                        .HasColumnName("fk_applicant_id");

                    b.Property<string>("Outcome")
                        .IsRequired()
                        .HasColumnName("outcome")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<bool>("Record")
                        .HasColumnName("record");

                    b.Property<string>("TypeOfCriminalAct")
                        .IsRequired()
                        .HasColumnName("type_of_criminal_act")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("FkApplicantId");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasName("UQ__criminal__3213E83E59D6934C");

                    b.ToTable("criminal_record");
                });

            modelBuilder.Entity("BcmmOja.Models.DisciplinaryRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AwardSanction")
                        .IsRequired()
                        .HasColumnName("award_sanction")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<DateTime>("DateFinalized")
                        .HasColumnName("date_finalized");

                    b.Property<int>("FkApplicantId")
                        .HasColumnName("fk_applicant_id");

                    b.Property<string>("NameOfInstitute")
                        .IsRequired()
                        .HasColumnName("name_of_institute")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool>("Record")
                        .HasColumnName("record");

                    b.Property<bool>("Resign")
                        .HasColumnName("resign");

                    b.Property<string>("ResignReason")
                        .HasColumnName("resign_reason")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("TypeOfMisconduct")
                        .IsRequired()
                        .HasColumnName("type_of_misconduct")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("FkApplicantId");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasName("UQ__discipli__3213E83EAB458416");

                    b.ToTable("disciplinary_record");
                });

            modelBuilder.Entity("BcmmOja.Models.Experience", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("description")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Employer")
                        .IsRequired()
                        .HasColumnName("employer")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("EndDate")
                        .HasColumnName("end_date");

                    b.Property<int>("FkApplicantId")
                        .HasColumnName("fk_applicant_id");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnName("position")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool>("PreviousMunicipality")
                        .HasColumnName("previous_municipality");

                    b.Property<string>("PreviousMunicipalityName")
                        .HasColumnName("previous_municipality_name")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ReasonForLeaving")
                        .IsRequired()
                        .HasColumnName("reason_for_leaving")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("StartDate")
                        .HasColumnName("start_date");

                    b.HasKey("Id");

                    b.HasIndex("FkApplicantId");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasName("UQ__experien__3213E83E5807A6D4");

                    b.ToTable("experience");
                });

            modelBuilder.Entity("BcmmOja.Models.General", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CommenceDate")
                        .HasColumnName("commence_date");

                    b.Property<bool>("ConflictOfInterest")
                        .HasColumnName("conflict_of_interest");

                    b.Property<string>("ConflictOfInterestReason")
                        .HasColumnName("conflict_of_interest_reason")
                        .HasMaxLength(300)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<int>("FkApplicantId")
                        .HasColumnName("fk_applicant_id");

                    b.Property<bool>("PhysicalMentalCondition")
                        .HasColumnName("physical_mental_condition");

                    b.Property<bool>("PositionTermsAccepted")
                        .HasColumnName("position_terms_accepted");

                    b.HasKey("Id");

                    b.HasIndex("FkApplicantId")
                        .IsUnique()
                        .HasName("UQ__general__44609BBD0D027BA3");

                    b.ToTable("general");
                });

            modelBuilder.Entity("BcmmOja.Models.Login", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("FkApplicantId")
                        .HasColumnName("fk_applicant_id");

                    b.Property<DateTime>("LastLogin")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_login")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("password")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasName("UQ__login__AB6E6164EDA9114A");

                    b.HasIndex("FkApplicantId")
                        .IsUnique()
                        .HasName("UQ__login__44609BBD75A61BF0");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasName("UQ__login__3213E83E44A7BD22");

                    b.ToTable("login");
                });

            modelBuilder.Entity("BcmmOja.Models.LoginLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("FkApplicantId")
                        .HasColumnName("fk_applicant_id");

                    b.HasKey("Id");

                    b.HasIndex("FkApplicantId");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasName("UQ__login_lo__3213E83ECCEF71D5");

                    b.ToTable("login_log");
                });

            modelBuilder.Entity("BcmmOja.Models.PoliticalOffice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnName("expiry_date");

                    b.Property<int>("FkApplicantId")
                        .HasColumnName("fk_applicant_id");

                    b.Property<bool>("PoliticalOffice1")
                        .HasColumnName("political_office");

                    b.Property<string>("PoliticalParty")
                        .IsRequired()
                        .HasColumnName("political_party")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnName("position")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("FkApplicantId");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasName("UQ__politica__3213E83E789AD027");

                    b.ToTable("political_office");
                });

            modelBuilder.Entity("BcmmOja.Models.ProfessionalMembership", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnName("expiry_date");

                    b.Property<int>("FkApplicantId")
                        .HasColumnName("fk_applicant_id");

                    b.Property<string>("MembershipNumber")
                        .IsRequired()
                        .HasColumnName("membership_number")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ProfessionalBody")
                        .IsRequired()
                        .HasColumnName("professional_body")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("FkApplicantId");

                    b.ToTable("professional_membership");
                });

            modelBuilder.Entity("BcmmOja.Models.Qualification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<int>("FkApplicantId")
                        .HasColumnName("fk_applicant_id");

                    b.Property<string>("NameOfInstitute")
                        .IsRequired()
                        .HasColumnName("name_of_institute")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("NameOfQualification")
                        .IsRequired()
                        .HasColumnName("name_of_qualification")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("TypeOfQualification")
                        .IsRequired()
                        .HasColumnName("type_of_qualification")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("YearObtained")
                        .HasColumnName("year_obtained");

                    b.HasKey("Id");

                    b.HasIndex("FkApplicantId");

                    b.ToTable("qualification");
                });

            modelBuilder.Entity("BcmmOja.Models.Reference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CellNumber")
                        .IsRequired()
                        .HasColumnName("cell_number")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("FkApplicantId")
                        .HasColumnName("fk_applicant_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Relationship")
                        .IsRequired()
                        .HasColumnName("relationship")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("TelNumber")
                        .IsRequired()
                        .HasColumnName("tel_number")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("FkApplicantId");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasName("UQ__referenc__3213E83E020F90F9");

                    b.ToTable("reference");
                });

            modelBuilder.Entity("BcmmOja.Models.Vacancy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Active")
                        .HasColumnName("active")
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<string>("Author")
                        .HasColumnName("author")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ClosingDate")
                        .HasColumnName("closing_date");

                    b.Property<string>("Contact")
                        .HasColumnName("contact")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<short?>("Count")
                        .HasColumnName("count");

                    b.Property<short?>("Date")
                        .HasColumnName("date");

                    b.Property<short?>("Day")
                        .HasColumnName("day");

                    b.Property<string>("Directorate")
                        .HasColumnName("directorate")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("Download")
                        .HasColumnName("download")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("Grade")
                        .HasColumnName("grade")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("Kpas")
                        .HasColumnName("kpas")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<byte?>("Month")
                        .HasColumnName("month");

                    b.Property<string>("Package")
                        .HasColumnName("package")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("Reference")
                        .HasColumnName("reference")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("Requirements")
                        .HasColumnName("requirements")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("Title")
                        .HasColumnName("title")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<short?>("Year")
                        .HasColumnName("year");

                    b.HasKey("Id");

                    b.ToTable("vacancy");
                });

            modelBuilder.Entity("BcmmOja.Models.ApplicantDocument", b =>
                {
                    b.HasOne("BcmmOja.Models.Applicant", "FkApplicant")
                        .WithMany("ApplicantDocument")
                        .HasForeignKey("FkApplicantId")
                        .HasConstraintName("FK__applicant__fk_ap__6D0D32F4");
                });

            modelBuilder.Entity("BcmmOja.Models.ApplicantVacancy", b =>
                {
                    b.HasOne("BcmmOja.Models.Applicant", "FkApplicant")
                        .WithMany("ApplicantVacancy")
                        .HasForeignKey("FkApplicantId")
                        .HasConstraintName("FK__applicant__fk_ap__6E01572D");
                });

            modelBuilder.Entity("BcmmOja.Models.ComputerLiteracy", b =>
                {
                    b.HasOne("BcmmOja.Models.Applicant", "FkApplicant")
                        .WithMany("ComputerLiteracy")
                        .HasForeignKey("FkApplicantId")
                        .HasConstraintName("FK__computer___fk_ap__6EF57B66");
                });

            modelBuilder.Entity("BcmmOja.Models.CriminalRecord", b =>
                {
                    b.HasOne("BcmmOja.Models.Applicant", "FkApplicant")
                        .WithMany("CriminalRecord")
                        .HasForeignKey("FkApplicantId")
                        .HasConstraintName("FK__criminal___fk_ap__6FE99F9F");
                });

            modelBuilder.Entity("BcmmOja.Models.DisciplinaryRecord", b =>
                {
                    b.HasOne("BcmmOja.Models.Applicant", "FkApplicant")
                        .WithMany("DisciplinaryRecord")
                        .HasForeignKey("FkApplicantId")
                        .HasConstraintName("FK__disciplin__fk_ap__70DDC3D8");
                });

            modelBuilder.Entity("BcmmOja.Models.Experience", b =>
                {
                    b.HasOne("BcmmOja.Models.Applicant", "FkApplicant")
                        .WithMany("Experience")
                        .HasForeignKey("FkApplicantId")
                        .HasConstraintName("FK__experienc__fk_ap__71D1E811");
                });

            modelBuilder.Entity("BcmmOja.Models.General", b =>
                {
                    b.HasOne("BcmmOja.Models.Applicant", "FkApplicant")
                        .WithOne("General")
                        .HasForeignKey("BcmmOja.Models.General", "FkApplicantId")
                        .HasConstraintName("FK__general__fk_appl__72C60C4A");
                });

            modelBuilder.Entity("BcmmOja.Models.Login", b =>
                {
                    b.HasOne("BcmmOja.Models.Applicant", "FkApplicant")
                        .WithOne("Login")
                        .HasForeignKey("BcmmOja.Models.Login", "FkApplicantId")
                        .HasConstraintName("FK__login__fk_applic__73BA3083");
                });

            modelBuilder.Entity("BcmmOja.Models.LoginLog", b =>
                {
                    b.HasOne("BcmmOja.Models.Applicant", "FkApplicant")
                        .WithMany("LoginLog")
                        .HasForeignKey("FkApplicantId")
                        .HasConstraintName("FK__login_log__fk_ap__74AE54BC");
                });

            modelBuilder.Entity("BcmmOja.Models.PoliticalOffice", b =>
                {
                    b.HasOne("BcmmOja.Models.Applicant", "FkApplicant")
                        .WithMany("PoliticalOffice")
                        .HasForeignKey("FkApplicantId")
                        .HasConstraintName("FK__political__fk_ap__75A278F5");
                });

            modelBuilder.Entity("BcmmOja.Models.ProfessionalMembership", b =>
                {
                    b.HasOne("BcmmOja.Models.Applicant", "FkApplicant")
                        .WithMany("ProfessionalMembership")
                        .HasForeignKey("FkApplicantId")
                        .HasConstraintName("FK__professio__fk_ap__76969D2E");
                });

            modelBuilder.Entity("BcmmOja.Models.Qualification", b =>
                {
                    b.HasOne("BcmmOja.Models.Applicant", "FkApplicant")
                        .WithMany("Qualification")
                        .HasForeignKey("FkApplicantId")
                        .HasConstraintName("FK__qualifica__fk_ap__778AC167");
                });

            modelBuilder.Entity("BcmmOja.Models.Reference", b =>
                {
                    b.HasOne("BcmmOja.Models.Applicant", "FkApplicant")
                        .WithMany("Reference")
                        .HasForeignKey("FkApplicantId")
                        .HasConstraintName("FK__reference__fk_ap__787EE5A0");
                });
#pragma warning restore 612, 618
        }
    }
}
